/*2023-03-30T15:05:00.503165953Z*/

/**********************************************************************
 * rte_cfg.h
 *
 * generated by : embedded software producer / runtime code gen 1.0.0
 **********************************************************************/

#ifndef RTE_CFG_H
#define RTE_CFG_H

#ifdef __cplusplus
extern "C" {
#endif

#include "task_descriptor.h" /* task_descriptor declaration */

#include "Counter_type.h"
#include "Timer_type.h"
#include "Button_type.h"
#include "Light_type.h"

#define NUMBER_OF_TASKS 1

/*
 * Tasks ids definition
 */
#define TASK_0 0

/*
 * Runnables in tasks position index definition
 * Required to trigger the proper function in a specific task
 */
#define TASK_0_Flashlight_timer_Timer 0
#define TASK_0_Flashlight_light_Light 1
#define TASK_0_Flashlight_button_Button 2
#define TASK_0_Flashlight_count_OB_cnt 3

#define NB_INST_COUNTER 1
#define NB_INST_TIMER 1
#define NB_INST_BUTTON 1
#define NB_INST_LIGHT 1

void component_instances_init(void);
void task_descriptors_init(void);
void components_init(void);

/*
 * Shared variables definitions
 */
// extern Boolean from_Flashlight_timer_light_snd;
// extern SignalEvent_On_type from_Flashlight_timer_light_On;
// extern SignalEvent_Off_type from_Flashlight_timer_light_Off;
// extern SignalEvent_Tick_type from_Flashlight_timer_light_Tick;
// extern Boolean from_Flashlight_light_pout_io;
// extern Boolean from_Flashlight_button_control_snd;
// extern SignalEvent_On_type from_Flashlight_button_control_On;
// extern SignalEvent_Off_type from_Flashlight_button_control_Off;
// extern SignalEvent_Tick_type from_Flashlight_button_control_Tick;
// extern Integer from_Flashlight_count_fp_counts_data;
// extern SignalEvent_On_type from_UNCONNECTED_InputSignal_On;
// extern SignalEvent_Off_type from_UNCONNECTED_InputSignal_Off;
// extern SignalEvent_Tick_type from_UNCONNECTED_InputSignal_Tick;
// extern Boolean from_UNCONNECTED_pin_io;

/*
 * Event Triggered functions
 */

/*
 * Shared variable functions
 *
 * Define a direct access to a memory location through a pointer
 */

/*
 * task_descriptors variable is declared in the common part of the runtime
 * and is used in the target specific part. so it is made available via
 * this extern definition.
 */
extern task_descriptor task_descriptors[NUMBER_OF_TASKS];

#ifdef __cplusplus
} /* extern "C" */
#endif /* __cplusplus */

#endif /* RTE_CFG_H */

